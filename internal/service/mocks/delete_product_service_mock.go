// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import (
	context "context"

	delete_product "github.com/jfelipearaujo-org/ms-product-catalog/internal/service/product/delete_product"
	mock "github.com/stretchr/testify/mock"
)

// MockDeleteProductService is an autogenerated mock type for the DeleteProductService type
type MockDeleteProductService struct {
	mock.Mock
}

// Handle provides a mock function with given fields: ctx, request
func (_m *MockDeleteProductService) Handle(ctx context.Context, request delete_product.DeleteProductDto) error {
	ret := _m.Called(ctx, request)

	if len(ret) == 0 {
		panic("no return value specified for Handle")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, delete_product.DeleteProductDto) error); ok {
		r0 = rf(ctx, request)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockDeleteProductService creates a new instance of MockDeleteProductService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDeleteProductService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDeleteProductService {
	mock := &MockDeleteProductService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
